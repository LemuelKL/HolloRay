This is the mini language series for ART,
revised 7 November 2021 by Adrian Johnstone to exlcusively use Value attributes

(1) miniSyntax.art contains just the BNF productions for a calculator
language called from a print statement.

(2) miniSyntaxRDT.art is miniSyntax.art with GIFT promotion operators
to produce a simplified output tree.

(3) miniCalc is miniSyntax.art with attributes and actions to
implement the semantics of a simple calculator.

(4) miniAssign.art adds a simple symbol table, an assignment statement
and variable access. The start symbol is statement which generates a
sequence of statements.

(5) miniIf.art adds an if statement and a compound statement to the
rules for statement, which reverts to being the start symbol

(6) miniWhile.art adds a while statement

(7) miniCall.art adds procedure control flow, but there are no
paramaters or any sort of type system. Variables and procedures are
stored in separate hash tables.

(8) miniMusic.art is a simple music player DSL based on miniCall.art
which uses the Java MIDI synthesizer for output. Three support classes
(Chord, Scale and MiniMusicPlayer) are used and need to be separately
compiled.

There are also some Un*x shell scripts and Windows batch files to
compile and run these examples.
x
(a) Windows: parse myfile
    Unix:  ./parse.sh myfile

Builds a parser from myfile.art and runs it on myfile.str. For
each of the mini language grammars x.art, there is a corresponding
test file x.str

(b) Windows: music
    Unix:  ./music.sh

Builds and runs miniMusic, including compilation of the support classes 

(c) Windows: all
    Unix:  ./all.sh

Builds and runs all of the examples, announcing each as it is executed.

(d) Windows: showdot rdt.dot
    Unix:  ./showdot.sh rdt.dot

Use the dot utility from the GraphViz tools to generate a PDF file
from rdt.dot. You need to have added the -v option to your parse
command to get ART to generate the rdt.dot file. The PDF can be
displayed using your favoutite viwer.

(e) Windows: clean
    Unix:  ./clean.sh

Removes intermediate file and old .dot and .dot.pdf files. This script
is called by parse to ensure that .class, .dot and .dot.pdf
files are synchronised.
